{
  http_port     8080
  https_port    8443
  debug
}

127.0.0.1, localhost {
  route /auth* {
    authp {
      backends {
        local_backend {
          method local
          path assets/conf/local/auth/user_db.json
          realm local
        }
        ldap_backend {
          method ldap
          realm contoso.com
          servers {
            ldaps://ldaps.contoso.com ignore_cert_errors
          }
          attributes {
            name givenName
            surname sn
            username sAMAccountName
            member_of memberOf
            email mail
          }
          username "CN=authzsvc,OU=Service Accounts,OU=Administrative Accounts,DC=CONTOSO,DC=COM"
          password "P@ssW0rd123"
          search_base_dn "DC=CONTOSO,DC=COM"
          search_filter "(&(|(sAMAccountName=%s)(mail=%s))(objectclass=user))"
          groups {
            "CN=Admins,OU=Security,OU=Groups,DC=CONTOSO,DC=COM" admin
            "CN=Editors,OU=Security,OU=Groups,DC=CONTOSO,DC=COM" editor
            "CN=Viewers,OU=Security,OU=Groups,DC=CONTOSO,DC=COM" viewer
          }
        }
        azure_saml_backend {
          method saml
          provider azure
          realm azure
          idp_metadata_location assets/conf/saml/azure/idp/azure_ad_app_metadata.xml
          idp_sign_cert_location assets/conf/saml/azure/idp/azure_ad_app_signing_cert.pem
          tenant_id "1b9e886b-8ff2-4378-b6c8-6771259a5f51"
          application_id "623cae7c-e6b2-43c5-853c-2059c9b2cb58"
          application_name "My Gatekeeper"
          entity_id "urn:caddy:mygatekeeper"
          acs_url https://mygatekeeper/saml
          acs_url https://mygatekeeper.local/saml
          acs_url https://192.168.10.10:3443/saml
          acs_url https://localhost:3443/saml
        }
      }
      crypto key token name access_token
      crypto key sign-verify 0e2fdcf8-6868-41a7-884b-7308795fc286
      ui {
        logo url "https://caddyserver.com/resources/images/caddy-circle-lock.svg"
        logo description "Caddy"
        links {
          "Prometheus" /prometheus
          "Alertmanager" /alertmanager
          "My App" /myapp
        }
      }
    }
  }

  route /prometheus* {
    jwt {
      primary yes
      crypto key token name access_token
      crypto key verify 0e2fdcf8-6868-41a7-884b-7308795fc286
      set auth url /auth
      allow roles anonymous guest admin
      allow roles authp/admin
      allow roles admin editor viewer
      allow roles AzureAD_Administrator AzureAD_Editor AzureAD_Viewer
      allow roles everyone Everyone
    }
    uri strip_prefix /prometheus
    reverse_proxy http://127.0.0.1:9080
  }

  route /alertmanager* {
    jwt
    uri strip_prefix /alertmanager
    reverse_proxy http://127.0.0.1:9083
  }

  route /myapp* {
    jwt
    respond * "myapp" 200
  }

  route /version* {
    respond * "1.0.0" 200
  }

  route {
    redir https://{hostport}/auth 302
  }
}
